(deflisten wallpapers "scripts/wallpaper/get-all-wallpapers")

(defwindow wallpaper-selector-closer
  :monitor '["<primary>", 1, 0]'
  :geometry (geometry :width "100%" :height "100%")
  :stacking "fg"
  :focusable false
  (closer :window "wallpaper-selector"))

(defwindow wallpaper-selector
  :monitor '["<primary>", 1, 0]'
  :geometry (geometry :width "100%"
                      :height "66%"
                      :anchor "center")
  :stacking "overlay"
  :exclusive false
  :namespace "wallpaper-selector"
  :focusable true
  (box :orientation "vertical" :class "wallpaper-stripe" :space-evenly false :spacing 40 
    (box :orientation "horizontal" :space-evenly true
        (box)
        (input :class "wallpaper-filter" :onchange "scripts/wallpaper/set_filter {}")
        (box))
    (box :orientation "horizontal" :space-evenly false :spacing 40 :vexpand true 
      (wallpaper-button 
        :path "wallpaper/img/before.svg" 
        :onclick "scripts/wallpaper/decrement-wallpaper-page")
      (box :orientation "horizontal" :space-evenly true :spacing 40 :hexpand true :vexpand true 
        (for wallpaper in wallpapers
          (thumbnail :path wallpaper)))
      (wallpaper-button 
        :path "wallpaper/img/next.svg" 
        :onclick "scripts/wallpaper/increment-wallpaper-page"))))

(defwidget thumbnail [path]
  (button :class "thumbnail" :active true :onclick "scripts/wallpaper/select-wallpaper ${path}"
    (box :class "thumbnail-image" 
      :style "background-image: url('${path}');")))

(defwidget wallpaper-button [path onclick] 
  (box :orientation "vertical" :space-evenly false  :valign "center"
    (button :class "wallpaper-button" :active true :onclick onclick
      (image :path path :image-height 30 :fill-svg "#cba6f7"))))
